##############################################################
## PREREQUISITES                                            ##
##############################################################

# git clone git@github.com:smugljanka/sdaminfo_redmine.git redmine
# cd redmine
# mkdir -p data/{letsencrypt,plugins,backup,files}

1. Prepare a database configuration and make changes to your database parameters
cp env/database.env.example env/database.env
vi env/database.env

2. Deploy redmine stack
2.1 Prepare stack secrets in redmine-stack-prod.yml
2.2 Deploy new stack "redmine"
docker stack deploy -c ./redmine-stack.yml -c ./redmine-stack-prod.yml redmine

3. Deploy MTA stack
3.1 Prepare stack secrets in mta-stack-prod.yml
3.2 Deploy new stack "mta"


##############################################################
##          UPGRADE REDMINE                                 ##
##############################################################

# Upgrade database
1. Delete tables from redmine database - fix error Mysql2::Error: Table 'queries_roles' already exists
DROP TABLE `redmine`.`queries_roles`;
DROP TABLE `redmine`.`custom_fields_roles`;
DROP TABLE `redmine`.`email_addresses`;
DROP TABLE `redmine`.`roles_managed_roles`;
DROP TABLE `redmine`.`imports`;
DROP TABLE `redmine`.`import_items`;
DROP TABLE `redmine`.`custom_field_enumerations`;

2. Run db upgrade
docker container exec -w /usr/src/redmine 9cd58c471e3d sh -c "bundle exec rake db:migrate RAILS_ENV=production"

# Upgrade plugins
docker container exec -w /usr/src/redmine 9cd58c471e3d sh -c "bundle exec rake redmine:plugins:migrate RAILS_ENV=production"

# Restart service
docker stack services <stack_name>
docker service update --force SRV_ID
  where SRV_ID - ID of redmine-backend service


##### Tips
1. Update configs at "redmine_nginx-redmine.conf" service
docker service update --config-rm=redmine_nginx-redmine.conf --force $(docker service ls -f "name=redmine_redmine-frontend" -q)
docker service update --config-rm=redmine_nginx.conf --force $(docker service ls -f "name=redmine_redmine-frontend" -q)
docker config rm redmine_nginx-redmine.conf
docker config rm redmine_nginx.conf
docker stack deploy -c ./redmine-stack.yml redmine
docker container prune -f

2. Update frontend service
docker service update --force $(docker service ls -f "name=redmine_redmine-frontend" -q)
docker stack deploy -c ./redmine-stack.yml redmine
docker container prune -f


########################################################################################################################
#### CERTBOT configuration
########################################################################################################################

# Generate a LetsEncrypt certificate and private key for the domain rm.bolyshev.com

1. Run the following command when the redmine stack already up an running

docker run --rm -v /opt/www/logs:/var/log/letsencrypt:rw -v /opt/www/redmine/letsencrypt:/etc/letsencrypt:rw -v redmine_frontend-www:/var/www:rw \
   certbot/certbot certonly --webroot -w /var/www --email admin@bolyshev.com -d rm.bolyshev.com --agree-tos

# You should get the following
Saving debug log to /var/log/letsencrypt/letsencrypt.log
Plugins selected: Authenticator webroot, Installer None

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Would you be willing to share your email address with the Electronic Frontier
Foundation, a founding partner of the Let's Encrypt project and the non-profit
organization that develops Certbot? We'd like to send you email about our work
encrypting the web, EFF news, campaigns, and ways to support digital freedom.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(Y)es/(N)o: Yes
Obtaining a new certificate
Performing the following challenges:
http-01 challenge for rm.bolyshev.com
Using the webroot path /var/www for all unmatched domains.
Waiting for verification...
Cleaning up challenges

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/rm.bolyshev.com/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/rm.bolyshev.com/privkey.pem
   Your cert will expire on 2019-01-08. To obtain a new or tweaked
   version of this certificate in the future, simply run certbot
   again. To non-interactively renew *all* of your certificates, run
   "certbot renew"
 - Your account credentials have been saved in your Certbot
   configuration directory at /etc/letsencrypt. You should make a
   secure backup of this folder now. This configuration directory will
   also contain certificates and private keys obtained by Certbot so
   making regular backups of this folder is ideal.
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le


#
2. Renew certificates
00 23 * * * cd /opt/www/redmine && docker run --rm -v /opt/www/logs:/var/log/letsencrypt:rw -v /opt/www/redmine/letsencrypt:/etc/letsencrypt:rw -v redmine_frontend-www:/var/www:rw certbot/certbot renew

Saving debug log to /var/log/letsencrypt/letsencrypt.log

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Processing /etc/letsencrypt/renewal/rm.bolyshev.com.conf
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Cert not yet due for renewal

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

The following certs are not due for renewal yet:
  /etc/letsencrypt/live/rm.bolyshev.com/fullchain.pem expires on 2019-01-08 (skipped)
No renewals were attempted.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

######### Docker host MTA configuration ##################
# http://www.redmine.org/projects/redmine/wiki/EmailConfiguration
# http://doc.nethence.com/docker/postfix
#
# /etc/postfix/main.cf
queue_directory = /var/spool/postfix
command_directory = /usr/sbin
daemon_directory = /usr/libexec/postfix
data_directory = /var/lib/postfix
mail_owner = postfix
myhostname = rm.bolyshev.com
mydomain = bolyshev.com
myorigin = $mydomain
inet_interfaces = localhost,172.17.0.1,172.18.0.1
inet_protocols = all
mydestination = $myhostname, localhost.$mydomain, localhost
unknown_local_recipient_reject_code = 550
mynetworks = 127.0.0.0/8,172.18.0.0/16,172.17.0.0/16
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
